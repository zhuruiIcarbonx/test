<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tanyun.commons.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.tanyun.commons.domain.User" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="userpassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="idCardClass" property="idcardclass" jdbcType="TINYINT" />
    <result column="idCardNumber" property="idcardnumber" jdbcType="VARCHAR" />
    <result column="photoUrl" property="photourl" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="added_time" property="addedTime" jdbcType="TIMESTAMP" />
    <result column="last_modified_time" property="lastModifiedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, userName, userpassword, phoneNumber, email, sex, birthday, idCardClass, 
    idCardNumber, photoUrl, status, added_time, last_modified_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tanyun.commons.domain.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tanyun.commons.domain.UserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tanyun.commons.domain.User" >
    insert into t_user (user_id, userName, userpassword, 
      phoneNumber, email, sex, 
      birthday, idCardClass, idCardNumber, 
      photoUrl, status, added_time, 
      last_modified_time)
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{phonenumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{birthday,jdbcType=TIMESTAMP}, #{idcardclass,jdbcType=TINYINT}, #{idcardnumber,jdbcType=VARCHAR}, 
      #{photourl,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{addedTime,jdbcType=TIMESTAMP}, 
      #{lastModifiedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tanyun.commons.domain.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="userpassword != null" >
        userpassword,
      </if>
      <if test="phonenumber != null" >
        phoneNumber,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="idcardclass != null" >
        idCardClass,
      </if>
      <if test="idcardnumber != null" >
        idCardNumber,
      </if>
      <if test="photourl != null" >
        photoUrl,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="addedTime != null" >
        added_time,
      </if>
      <if test="lastModifiedTime != null" >
        last_modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="idcardclass != null" >
        #{idcardclass,jdbcType=TINYINT},
      </if>
      <if test="idcardnumber != null" >
        #{idcardnumber,jdbcType=VARCHAR},
      </if>
      <if test="photourl != null" >
        #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="addedTime != null" >
        #{addedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null" >
        #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tanyun.commons.domain.UserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userpassword != null" >
        userpassword = #{record.userpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null" >
        phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idcardclass != null" >
        idCardClass = #{record.idcardclass,jdbcType=TINYINT},
      </if>
      <if test="record.idcardnumber != null" >
        idCardNumber = #{record.idcardnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.photourl != null" >
        photoUrl = #{record.photourl,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.addedTime != null" >
        added_time = #{record.addedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifiedTime != null" >
        last_modified_time = #{record.lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      userName = #{record.username,jdbcType=VARCHAR},
      userpassword = #{record.userpassword,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      idCardClass = #{record.idcardclass,jdbcType=TINYINT},
      idCardNumber = #{record.idcardnumber,jdbcType=VARCHAR},
      photoUrl = #{record.photourl,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      added_time = #{record.addedTime,jdbcType=TIMESTAMP},
      last_modified_time = #{record.lastModifiedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tanyun.commons.domain.User" >
    update t_user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userpassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="idcardclass != null" >
        idCardClass = #{idcardclass,jdbcType=TINYINT},
      </if>
      <if test="idcardnumber != null" >
        idCardNumber = #{idcardnumber,jdbcType=VARCHAR},
      </if>
      <if test="photourl != null" >
        photoUrl = #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="addedTime != null" >
        added_time = #{addedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null" >
        last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tanyun.commons.domain.User" >
    update t_user
    set userName = #{username,jdbcType=VARCHAR},
      userpassword = #{userpassword,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      idCardClass = #{idcardclass,jdbcType=TINYINT},
      idCardNumber = #{idcardnumber,jdbcType=VARCHAR},
      photoUrl = #{photourl,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      added_time = #{addedTime,jdbcType=TIMESTAMP},
      last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>